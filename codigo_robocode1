package robowin;
import robocode.*;
import java.awt.Color;
import robocode.util.Utils;

public class robowin extends AdvancedRobot {
    private boolean bateuNaParede = false;

    public void run() {
        setColors(Color.blue, Color.red, Color.green);
        while (true) {
            // Movimento errático
            movimentoErratico();

            // Gire aleatoriamente para evitar ser um alvo fácil
            double anguloAleatorio = Math.random() * 45;
            turnLeft(anguloAleatorio);

            // Execute uma varredura de radar para detectar inimigos
            turnRadarRight(360);
        }
    }

    // Método para movimento errático
    private void movimentoErratico() {
        // Gere um valor aleatório entre -1 e 1 para controlar a direção do movimento
        double direcao = Math.random() * 2 - 1;

        // Gere um valor aleatório para a quantidade de movimento
        double movimento = Math.random() * 200;

        // Aplique o movimento e a direção aleatória
        setAhead(movimento * direcao);

        // Gire aleatoriamente para mudar a direção do movimento
        double anguloGiro = Math.random() * 45;
        turnRight(anguloGiro);
    }

    public void onHitWall(HitWallEvent e) {
        // Detecção de parede
        double bearing = e.getBearing();
        if (bearing > 0) {
            turnRight(90); // Gire para longe da parede
        } else {
            turnLeft(90);
        }
    }

    public void onScannedRobot(ScannedRobotEvent e) {
        double bearing = e.getBearing();
        double distance = e.getDistance();

        double absoluteBearing = getHeadingRadians() + Math.toRadians(bearing);
        double angleToEnemy = Utils.normalRelativeAngle(absoluteBearing - getGunHeadingRadians());

        // Ajustar a mira
        turnGunRightRadians(angleToEnemy);

        // Controlar a potência do tiro com base na distância
        if (distance < 200) {
            fire(1);
        } else {
            fire(3);
        }
    }

    public void onHitRobot(HitRobotEvent e) {
        // Evite colisões com outros robôs
        if (e.getBearing() > 0) {
            turnRight(45); 
        } else {
            turnLeft(45); 
        }
        ahead(50); 
    }
}
